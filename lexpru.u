(import* str)
;data LExpr = LInt Int | LDouble Double | LRef [Char] | LAbs [Char] LExpr | LApply LExpr LExpr
(def LInt (\a (\f1 f2 f3 f4 f5 (f1 a))))
(def LDouble (\a (\f1 f2 f3 f4 f5 (f2 a))))
(def LRef (\a (\f1 f2 f3 f4 f5 (f3 a))))
(def LAbs (\a b (\f1 f2 f3 f4 f5 (f4 a b))))
(def LApply (\a b (\f1 f2 f3 f4 f5 (f5 a b))))
(def showLExpr (recur (\self exp
	(exp
		(\a (showInt a)) ; LInt
		(\a (showFloat a)) ; LDouble
		(\a (showString a)) ; LRef
		(\a b (. (showString (++ "(\\" (++ a " "))) (. (self b) (showString ")")))) ; LAbs
		(\a b (. (showString "(") (. (self a) (. (showString " ") (. (self b) (showString ")"))))))
	)
)))
(def defaultBuiltinNames (list
	"+"
	"-"
	"*"
	"/"
	"%"
	"toInt"
	"toFloat"
	"<"
	">="
	">"
	"<="
	"/="
	"="
	"exit"
	"openCmd"
	"close"
	"getChar"
	"getCharF"
	"peekChar"
	"peekCharF"
	"putChar"
	"putCharF"
	"getArg"
	"makeIntList"
	"systemCmd"
	))
